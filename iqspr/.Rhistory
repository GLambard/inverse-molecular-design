labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,30000))
for(i in 1:200){
smchem$smcexec(niter = 2, nsteps = 7, preorder = 0.2)
}
gensmis <- smchem$get_hiscores(nsmi=200, exsim=0.9)
head(gensmis)
pred <- qsprpred_env$qspr_predict(gensmis[,1])
predmat <- t(pred[[1]])
dpred <- data.frame(predmat)
colnames(dpred) <- c("E","HOMOLUMOgap")
predinit <- (t(qsprpred_env$qspr_predict("c1ccccc1O")[[1]]))
colnames(predinit) <- c("E","HOMOLUMOgap")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
annotate("rect", xmin=targ.min[1], xmax=targ.max[1], ymin=targ.min[2], ymax=targ.max[2], alpha=0.2, color="blue", fill="blue") +
geom_point(data = dpred, aes(x = E, y = HOMOLUMOgap), size=0.4, color="red") +
geom_point(data = data.frame(predinit), aes(x = E, y = HOMOLUMOgap), size=4, color="green", shape=3) +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
qsprpred_env$model_training(model=c("linear_Bayes"),params=NA)
targ.min <- c(50,2)
targ.max <- c(250,4)
qsprpred_env$set_target(targ.min,targ.max)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
gensmis <- smchem$get_hiscores(nsmi=200, exsim=0.9)
head(gensmis)
pred <- qsprpred_env$qspr_predict(gensmis[,1])
predmat <- t(pred[[1]])
dpred <- data.frame(predmat)
colnames(dpred) <- c("E","HOMOLUMOgap")
predinit <- (t(qsprpred_env$qspr_predict("c1ccccc1O")[[1]]))
colnames(predinit) <- c("E","HOMOLUMOgap")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
annotate("rect", xmin=targ.min[1], xmax=targ.max[1], ymin=targ.min[2], ymax=targ.max[2], alpha=0.2, color="blue", fill="blue") +
geom_point(data = dpred, aes(x = E, y = HOMOLUMOgap), size=0.4, color="red") +
geom_point(data = data.frame(predinit), aes(x = E, y = HOMOLUMOgap), size=4, color="green", shape=3) +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
viewstr(gensmis[1:10,1], nrow = 5, ncol = 2, legend = paste("ID:",c(1:10)))
library(mxnet)
data <- mx.symbol.Variable("data")
fc1 <- mx.symbol.FullyConnected(data, name = "FullyConnected 1", num.hidden = 128)
act1 <- mx.symbol.Activation(fc1, name = "Activation 1 tanh", act.type = 'tanh')
fc2 <- mx.symbol.FullyConnected(act1, name = "FullyConnected 2", num.hidden = 64)
act2 <- mx.symbol.Activation(fc2, name = "Activation 2 tanh", act.type = 'tanh')
fc3 <- mx.symbol.FullyConnected(act2, name = "FullyConnected 3", num.hidden = 1)
lro <- mx.symbol.LinearRegressionOutput(fc3, name = "Linear Regression Output")
graph.viz(lro, graph.title = "Custom graph", graph.width.px = 240, graph.height.px = 640, graph.title.font.name = "arial")
head(gensmis)
document()
library(devtools)
library(roxygen2)
document()
library(iqspr)
devtools::build_vignettes()
load_all()
document()
library(iqspr)
library(iqspr)
document()
load_all()
library(iqspr)
document()
library(iqspr)
devtools::build_vignettes()
devtools::build_vignettes()
document()
library(iqspr)
devtools::build_vignettes()
library(iqspr)
library(ggplot2)
library(gridExtra) # for multiple plots on a page
data("qspr.data")
dim(qspr.data)
head(qspr.data)
smis <- as.character(qspr.data[,1])
prop <- as.matrix(qspr.data[,c(2,3)])
smis <- as.character(qspr.data[,1])
prop <- as.matrix(qspr.data[,c(2,3)])
trainidx <- sample(1:nrow(qspr.data), 1000)
testidx <- sample((1:nrow(qspr.data))[-trainidx], 500)
dt <- data.frame(prop[trainidx,])
colnames(dt) <- c("E","HOMOLUMOgap")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
qsprpred_env <- QSPRpred()
qsprpred_env$init_env(smis=smis[trainidx], prop=prop[trainidx,], v_fnames=c("standard","extended","circular"))
get_descriptors()
features <- qsprpred_env$get_features()
length(features)
lapply(features,dim)
properties <- qsprpred_env$get_props()
length(properties)
lapply(properties,dim)
qsprpred_env$model_training(model=c("linear_Bayes","ranger"),params=list(list(NA),list("num.trees" = 200)),n_boot=10,s_boot = 0.85,r_boot = F,parallelize=T)
get_Models()
get_Model_params("elasticnet")
get_Model_params("ranger")
predictions <- qsprpred_env$qspr_predict(smis[testidx])
d1 <- data.frame(predictions[[1]][1,],prop[testidx,"E"],sqrt(predictions[[2]][1,]))
colnames(d1) <- c("pred","prop","sd")
d2 <- data.frame(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"],sqrt(predictions[[2]][2,]))
colnames(d2) <- c("pred","prop","sd")
prd.obs.rmse1 <- round(sqrt(sum((predictions[[1]][1,] - prop[testidx,"E"])^2) / length(testidx)),digits = 1)
prd.obs.corr1 <- round(cor(predictions[[1]][1,],prop[testidx,"E"]),digits = 2)
prd.obs.rmse2 <- round(sqrt(sum((predictions[[1]][2,] - prop[testidx,"HOMO-LUMO gap"])^2) / length(testidx)),digits = 1)
prd.obs.corr2 <- round(cor(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"]),digits = 2)
minmaxx <- c(min(d1[,1]),max(d1[,1]))
minmaxy <- c(min(d1[,2]),max(d1[,2]))
p1 <- ggplot(data = d1, aes(x = pred, y = prop, size=sd)) + geom_point(color="cyan3") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="E") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(100,100), y = c(max(d1[,"prop"])-100,max(d1[,"prop"])-70), label = c(paste("RMSE:",prd.obs.rmse1), paste("COR:",prd.obs.corr1)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
minmaxx <- c(min(d2[,1]),max(d2[,1]))
minmaxy <- c(min(d2[,2]),max(d2[,2]))
p2 <- ggplot(data = d2, aes(x = pred, y = prop, size = sd)) + geom_point(color="deepskyblue") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="HOMO-LUMO gap") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(5,5), y = c(max(d2[,"prop"])-1.5,max(d2[,"prop"])-1), label = c(paste("RMSE:",prd.obs.rmse2), paste("COR:",prd.obs.corr2)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p2,ncol=2)
qsprpred_env$model_training(model=c("linear_Bayes"),params=NA) # linear_Bayes prevails here for quick execution
targ.min <- c(50,2)
targ.max <- c(250,4)
qsprpred_env$set_target(targ.min,targ.max)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
gensmis <- smchem$get_hiscores(nsmi=200, exsim=0.9)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
rm(engram_5k)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
rm(engram_5k)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
qsprpred_env <- QSPRpred()
qsprpred_env$init_env(smis=smis[trainidx], prop=prop[trainidx,], v_fnames=c("standard","extended","circular"))
qsprpred_env$model_training(model=c("linear_Bayes"),params=NA) # linear_Bayes prevails here for quick execution
targ.min <- c(50,2)
targ.max <- c(250,4)
qsprpred_env$set_target(targ.min,targ.max)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
getwd()
setwd("./vignettes/")
getwd()
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
load_all()
document()
getwd()
setwd("../")
document()
library(iqspr)
library(iqspr)
load_all()
document()
getwd()
library(iqspr)
library(iqspr)
install.packages('rcdk')
install.packages("rcdk")
library(iqspr)
library(iqspr)
library(ggplot2)
library(gridExtra) # for multiple plots on a page
data("qspr.data")
dim(qspr.data)
head(qspr.data)
smis <- as.character(qspr.data[,1])
prop <- as.matrix(qspr.data[,c(2,3)])
trainidx <- sample(1:nrow(qspr.data), 1000)
testidx <- sample((1:nrow(qspr.data))[-trainidx], 500)
dt <- data.frame(prop[trainidx,])
colnames(dt) <- c("E","HOMOLUMOgap")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
qsprpred_env <- QSPRpred()
qsprpred_env$init_env(smis=smis[trainidx], prop=prop[trainidx,], v_fnames=c("standard","extended","circular"))
get_descriptors()
features <- qsprpred_env$get_features()
length(features)
lapply(features,dim)
properties <- qsprpred_env$get_props()
length(properties)
lapply(properties,dim)
qsprpred_env$model_training(model=c("linear_Bayes"),params=NA) # linear_Bayes prevails here for quick execution
targ.min <- c(50,2)
targ.max <- c(250,4)
qsprpred_env$set_target(targ.min,targ.max)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
library(iqspr)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
library(rcdklibs)
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
library(iqspr)
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
remove.packages("rcdk")
remove.packages("rcdklibs")
library(devtools)
install_version("rcdk", version = "3.3.8", repos="http://cran.us.r-project.org")
library(iqspr)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
data("trainedSMI")
trainedSMI[1,]
length(trainedSMI)
trainedSMI[1:0]
trainedSMI[1:10]
data("engram_5k")
class(engram_5k)
data("qspr.data")
class(qspr.data)
dim(qspr.data)
colnames(qspr.data)
document()
library(iqspr)
devtools::build_vignettes()
for(i in 1:50){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
esmi <- smchem$esmi
csmi <- sapply(esmi, function(x) x$get_validsmi())
isvalid[which(sapply(csmi, function(x) class(try(parse.smiles(as.character(x), kekulise=T), silent=T))!="list"))] <<- F
smchem$isvalid[which(sapply(csmi, function(x) class(try(parse.smiles(as.character(x), kekulise=T), silent=T))!="list"))] <<- F
smchem$isvalid[which(sapply(csmi, function(x) class(try(parse.smiles(as.character(x), kekulise=T), silent=T))!="list"))] <<- F
idx <- which(isvalid==T)
idx <- which(smchem$isvalid==T)
mols <- parse.smiles(as.character(csmi[idx]), kekulise=T)
csmi[idx] <-  sapply(mols, function(x) get.smiles(x, aromatic = T, type = 'generic'))
invpredtemp <- qsprpred$iqspr_predict(csmi[idx], temp)
invpredtemp <- qsprpred_env$iqspr_predict(csmi[idx], temp)
invpredtemp <- qsprpred_env$iqspr_predict(csmi[idx], c(30,3))
library(iqspr)
library(ggplot2)
library(gridExtra) # for multiple plots on a page
data("qspr.data")
dim(qspr.data)
head(qspr.data)
smis <- as.character(qspr.data[,1])
prop <- as.matrix(qspr.data[,c(2,3)])
trainidx <- sample(1:nrow(qspr.data), 1000)
testidx <- sample((1:nrow(qspr.data))[-trainidx], 500)
dt <- data.frame(prop[trainidx,])
colnames(dt) <- c("E","HOMOLUMOgap")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
qsprpred_env <- QSPRpred()
qsprpred_env$init_env(smis=smis[trainidx], prop=prop[trainidx,], v_fnames=c("standard","extended","circular"))
getwd()
get_descriptors()
features <- qsprpred_env$get_features()
length(features)
lapply(features,dim)
properties <- qsprpred_env$get_props()
length(properties)
lapply(properties,dim)
qsprpred_env$model_training(model=c("linear_Bayes","ranger"),params=list(list(NA),list("num.trees" = 200)),n_boot=10,s_boot = 0.85,r_boot = F,parallelize=F)
get_Models()
getwd()
get_Models()
get_Model_params("elasticnet")
get_Model_params("ranger")
predictions <- qsprpred_env$qspr_predict(smis[testidx])
# Example for 4 compounds
cat("Predictions:\n")
rownames(predictions[[1]]) <- c("E","HOMO-LUMO gap")
predictions[[1]][,1:4] # predictions
cat("\nVariances:\n")
rownames(predictions[[2]]) <- c("E","HOMO-LUMO gap")
predictions[[2]][,1:4] # variances
d1 <- data.frame(predictions[[1]][1,],prop[testidx,"E"],sqrt(predictions[[2]][1,]))
colnames(d1) <- c("pred","prop","sd")
d2 <- data.frame(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"],sqrt(predictions[[2]][2,]))
colnames(d2) <- c("pred","prop","sd")
devtools::use_data(d1)
devtools::use_data(d2)
data("d1")
data("d2")
load_all()
data("d1")
data("d2")
data("d1")
data("d2")
prd.obs.rmse1 <- round(sqrt(sum((predictions[[1]][1,] - prop[testidx,"E"])^2) / length(testidx)),digits = 1)
prd.obs.corr1 <- round(cor(predictions[[1]][1,],prop[testidx,"E"]),digits = 2)
prd.obs.rmse2 <- round(sqrt(sum((predictions[[1]][2,] - prop[testidx,"HOMO-LUMO gap"])^2) / length(testidx)),digits = 1)
prd.obs.corr2 <- round(cor(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"]),digits = 2)
minmaxx <- c(min(d1[,1]),max(d1[,1]))
minmaxy <- c(min(d1[,2]),max(d1[,2]))
p1 <- ggplot(data = d1, aes(x = pred, y = prop, size=sd)) + geom_point(color="cyan3") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="E") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(100,100), y = c(max(d1[,"prop"])-100,max(d1[,"prop"])-70), label = c(paste("RMSE:",prd.obs.rmse1), paste("COR:",prd.obs.corr1)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
minmaxx <- c(min(d2[,1]),max(d2[,1]))
minmaxy <- c(min(d2[,2]),max(d2[,2]))
p2 <- ggplot(data = d2, aes(x = pred, y = prop, size = sd)) + geom_point(color="deepskyblue") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="HOMO-LUMO gap") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(5,5), y = c(max(d2[,"prop"])-1.5,max(d2[,"prop"])-1), label = c(paste("RMSE:",prd.obs.rmse2), paste("COR:",prd.obs.corr2)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p2,ncol=2)
predictions <- qsprpred_env$qspr_predict(smis[testidx])
devtools::use_data(predictions)
load_all()
data("predictions")
# Example for 4 compounds
cat("Predictions:\n")
rownames(predictions[[1]]) <- c("E","HOMO-LUMO gap")
predictions[[1]][,1:4] # predictions
cat("\nVariances:\n")
rownames(predictions[[2]]) <- c("E","HOMO-LUMO gap")
predictions[[2]][,1:4] # variances
d1 <- data.frame(predictions[[1]][1,],prop[testidx,"E"],sqrt(predictions[[2]][1,]))
colnames(d1) <- c("pred","prop","sd")
d2 <- data.frame(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"],sqrt(predictions[[2]][2,]))
colnames(d2) <- c("pred","prop","sd")
prd.obs.rmse1 <- round(sqrt(sum((predictions[[1]][1,] - prop[testidx,"E"])^2) / length(testidx)),digits = 1)
prd.obs.corr1 <- round(cor(predictions[[1]][1,],prop[testidx,"E"]),digits = 2)
prd.obs.rmse2 <- round(sqrt(sum((predictions[[1]][2,] - prop[testidx,"HOMO-LUMO gap"])^2) / length(testidx)),digits = 1)
prd.obs.corr2 <- round(cor(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"]),digits = 2)
minmaxx <- c(min(d1[,1]),max(d1[,1]))
minmaxy <- c(min(d1[,2]),max(d1[,2]))
p1 <- ggplot(data = d1, aes(x = pred, y = prop, size=sd)) + geom_point(color="cyan3") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="E") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(100,100), y = c(max(d1[,"prop"])-100,max(d1[,"prop"])-70), label = c(paste("RMSE:",prd.obs.rmse1), paste("COR:",prd.obs.corr1)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
minmaxx <- c(min(d2[,1]),max(d2[,1]))
minmaxy <- c(min(d2[,2]),max(d2[,2]))
p2 <- ggplot(data = d2, aes(x = pred, y = prop, size = sd)) + geom_point(color="deepskyblue") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="HOMO-LUMO gap") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(5,5), y = c(max(d2[,"prop"])-1.5,max(d2[,"prop"])-1), label = c(paste("RMSE:",prd.obs.rmse2), paste("COR:",prd.obs.corr2)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p2,ncol=2)
d1 <- data.frame(predictions[[1]][1,],prop[testidx,"E"],sqrt(predictions[[2]][1,]))
colnames(d1) <- c("pred","prop","sd")
d2 <- data.frame(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"],sqrt(predictions[[2]][2,]))
colnames(d2) <- c("pred","prop","sd")
prd.obs.rmse1 <- round(sqrt(sum((predictions[[1]][1,] - prop[testidx,"E"])^2) / length(testidx)),digits = 1)
prd.obs.corr1 <- round(cor(predictions[[1]][1,],prop[testidx,"E"]),digits = 2)
prd.obs.rmse2 <- round(sqrt(sum((predictions[[1]][2,] - prop[testidx,"HOMO-LUMO gap"])^2) / length(testidx)),digits = 1)
prd.obs.corr2 <- round(cor(predictions[[1]][2,],prop[testidx,"HOMO-LUMO gap"]),digits = 2)
minmaxx <- c(min(d1[,1]),max(d1[,1]))
minmaxy <- c(min(d1[,2]),max(d1[,2]))
p1 <- ggplot(data = d1, aes(x = pred, y = prop, size=sd)) + geom_point(color="cyan3") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="E") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(100,100), y = c(max(d1[,"prop"])-100,max(d1[,"prop"])-70), label = c(paste("RMSE:",prd.obs.rmse1), paste("COR:",prd.obs.corr1)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
minmaxx <- c(min(d2[,1]),max(d2[,1]))
minmaxy <- c(min(d2[,2]),max(d2[,2]))
p2 <- ggplot(data = d2, aes(x = pred, y = prop, size = sd)) + geom_point(color="deepskyblue") + geom_point(shape=1, alpha=0.4) +
labs(x="predictions", y="observations", title="HOMO-LUMO gap") + ylim(minmaxy) + xlim(minmaxx) +
guides(size=guide_legend(title="s.d.")) +
geom_abline(intercept = 0, slope = 1, color = "red", size = 1, alpha = 0.5) +
annotate("text", x = c(5,5), y = c(max(d2[,"prop"])-1.5,max(d2[,"prop"])-1), label = c(paste("RMSE:",prd.obs.rmse2), paste("COR:",prd.obs.corr2)) , color="black", size=3, angle=0, fontface="bold") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p2,ncol=2)
qsprpred_env$model_training(model=c("linear_Bayes"),params=NA) # linear_Bayes prevails here for quick execution
targ.min <- c(50,2)
targ.max <- c(250,4)
qsprpred_env$set_target(targ.min,targ.max)
data("engram_5k")
smchem <- SmcChem$new(smis = rep("c1ccccc1O", 25), v_qsprpred = qsprpred_env, v_engram = engram_5k, v_temp=c(30,3))
for(i in 1:200){
smchem$smcexec(niter = 1, nsteps = 5, preorder = 0.2)
}
gensmis <- smchem$get_hiscores(nsmi=2000, exsim=0.9)
head(gensmis)
pred <- qsprpred_env$qspr_predict(gensmis[,1])
predmat <- t(pred[[1]])
dpred <- data.frame(predmat)
colnames(dpred) <- c("E","HOMOLUMOgap")
predinit <- (t(qsprpred_env$qspr_predict("c1ccccc1O")[[1]]))
colnames(predinit) <- c("E","HOMOLUMOgap")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
annotate("rect", xmin=targ.min[1], xmax=targ.max[1], ymin=targ.min[2], ymax=targ.max[2], alpha=0.2, color="blue", fill="blue") +
geom_point(data = dpred, aes(x = E, y = HOMOLUMOgap), size=0.4, color="red") +
geom_point(data = data.frame(predinit), aes(x = E, y = HOMOLUMOgap), size=4, color="green", shape=3) +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
devtools::use_data(gensmis)
load_all()
data("gensmis")
head(gensmis)
pred <- qsprpred_env$qspr_predict(gensmis[,1])
predmat <- t(pred[[1]])
dpred <- data.frame(predmat)
colnames(dpred) <- c("E","HOMOLUMOgap")
predinit <- (t(qsprpred_env$qspr_predict("c1ccccc1O")[[1]]))
colnames(predinit) <- c("E","HOMOLUMOgap")
devtools::use_data(dpred)
devtools::use_data(predinit)
load_all()
data("dpred")
data("predinit")
ggplot(data = dt, aes(x = E, y = HOMOLUMOgap)) + geom_point(size=0.4, color="black") +
annotate("rect", xmin=targ.min[1], xmax=targ.max[1], ymin=targ.min[2], ymax=targ.max[2], alpha=0.2, color="blue", fill="blue") +
geom_point(data = dpred, aes(x = E, y = HOMOLUMOgap), size=0.4, color="red") +
geom_point(data = data.frame(predinit), aes(x = E, y = HOMOLUMOgap), size=4, color="green", shape=3) +
labs(x="E", y="HOMO-LUMO gap", title="Initial dataset") + ylim(c(0,max(prop[,2]))) + xlim(c(0,max(prop[,1]))) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
viewstr(gensmis[1:10,1], nrow = 5, ncol = 2, legend = paste("ID:",c(1:10)))
class(predictions)
dim(predictions)
dim(predictions[[1]])
class(gensmis)
gensmis[1,]
dim(gensmis)
class(dpred)
class(predinit)
dpred[1,]
dim(dpred)
dim(predinit)
class(predinit)
predinit[1,]
predinit
document()
load_all()
document()
library(iqspr)
devtools::build_vignettes()
devtools::build_vignettes()
class(gensmis)
load_all()
document()
library(iqspr)
devtools::build_vignettes()
load_all()
document()
library(iqspr)
library(iqspr)
install_version("rcdk", version="3.3.8", repos="http://cran.us.r-project.org")
load_all()
detach("package:rcdk", unload=TRUE)
detach("package:rcdklibs", unload=TRUE)
install_version("rcdk", version="3.3.8", repos="http://cran.us.r-project.org")
remove.packages("rcdk")
remove.packages("rcdklibs")
detach("package:rJava", unload=TRUE)
install_version("rcdk", version="3.3.8", repos="http://cran.us.r-project.org")
load_all()
load_all()
library("rJava", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(iqspr)
load_all()
